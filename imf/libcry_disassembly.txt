
libcry.so:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 a3 00 00 00       	call   10b0 <__x86.get_pc_thunk.bx>
    100d:	81 c3 f3 2f 00 00    	add    $0x2ff3,%ebx
    1013:	8b 83 f8 ff ff ff    	mov    -0x8(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <printf@plt-0x10>:
    1030:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	00 00                	add    %al,(%eax)
	...

00001040 <printf@plt>:
    1040:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1046:	68 00 00 00 00       	push   $0x0
    104b:	e9 e0 ff ff ff       	jmp    1030 <_init+0x30>

00001050 <__stack_chk_fail@plt>:
    1050:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1056:	68 08 00 00 00       	push   $0x8
    105b:	e9 d0 ff ff ff       	jmp    1030 <_init+0x30>

00001060 <puts@plt>:
    1060:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1066:	68 10 00 00 00       	push   $0x10
    106b:	e9 c0 ff ff ff       	jmp    1030 <_init+0x30>

00001070 <system@plt>:
    1070:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    1076:	68 18 00 00 00       	push   $0x18
    107b:	e9 b0 ff ff ff       	jmp    1030 <_init+0x30>

00001080 <exit@plt>:
    1080:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    1086:	68 20 00 00 00       	push   $0x20
    108b:	e9 a0 ff ff ff       	jmp    1030 <_init+0x30>

00001090 <sprintf@plt>:
    1090:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    1096:	68 28 00 00 00       	push   $0x28
    109b:	e9 90 ff ff ff       	jmp    1030 <_init+0x30>

Disassembly of section .plt.got:

000010a0 <__cxa_finalize@plt>:
    10a0:	ff a3 f4 ff ff ff    	jmp    *-0xc(%ebx)
    10a6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

000010b0 <__x86.get_pc_thunk.bx>:
    10b0:	8b 1c 24             	mov    (%esp),%ebx
    10b3:	c3                   	ret    
    10b4:	66 90                	xchg   %ax,%ax
    10b6:	66 90                	xchg   %ax,%ax
    10b8:	66 90                	xchg   %ax,%ax
    10ba:	66 90                	xchg   %ax,%ax
    10bc:	66 90                	xchg   %ax,%ax
    10be:	66 90                	xchg   %ax,%ax

000010c0 <deregister_tm_clones>:
    10c0:	e8 e4 00 00 00       	call   11a9 <__x86.get_pc_thunk.dx>
    10c5:	81 c2 3b 2f 00 00    	add    $0x2f3b,%edx
    10cb:	8d 8a 8c 00 00 00    	lea    0x8c(%edx),%ecx
    10d1:	8d 82 8c 00 00 00    	lea    0x8c(%edx),%eax
    10d7:	39 c8                	cmp    %ecx,%eax
    10d9:	74 1d                	je     10f8 <deregister_tm_clones+0x38>
    10db:	8b 82 ec ff ff ff    	mov    -0x14(%edx),%eax
    10e1:	85 c0                	test   %eax,%eax
    10e3:	74 13                	je     10f8 <deregister_tm_clones+0x38>
    10e5:	55                   	push   %ebp
    10e6:	89 e5                	mov    %esp,%ebp
    10e8:	83 ec 14             	sub    $0x14,%esp
    10eb:	51                   	push   %ecx
    10ec:	ff d0                	call   *%eax
    10ee:	83 c4 10             	add    $0x10,%esp
    10f1:	c9                   	leave  
    10f2:	c3                   	ret    
    10f3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    10f7:	90                   	nop
    10f8:	c3                   	ret    
    10f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001100 <register_tm_clones>:
    1100:	e8 a4 00 00 00       	call   11a9 <__x86.get_pc_thunk.dx>
    1105:	81 c2 fb 2e 00 00    	add    $0x2efb,%edx
    110b:	55                   	push   %ebp
    110c:	89 e5                	mov    %esp,%ebp
    110e:	53                   	push   %ebx
    110f:	8d 8a 8c 00 00 00    	lea    0x8c(%edx),%ecx
    1115:	8d 82 8c 00 00 00    	lea    0x8c(%edx),%eax
    111b:	83 ec 04             	sub    $0x4,%esp
    111e:	29 c8                	sub    %ecx,%eax
    1120:	89 c3                	mov    %eax,%ebx
    1122:	c1 e8 1f             	shr    $0x1f,%eax
    1125:	c1 fb 02             	sar    $0x2,%ebx
    1128:	01 d8                	add    %ebx,%eax
    112a:	d1 f8                	sar    %eax
    112c:	74 14                	je     1142 <register_tm_clones+0x42>
    112e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
    1134:	85 d2                	test   %edx,%edx
    1136:	74 0a                	je     1142 <register_tm_clones+0x42>
    1138:	83 ec 08             	sub    $0x8,%esp
    113b:	50                   	push   %eax
    113c:	51                   	push   %ecx
    113d:	ff d2                	call   *%edx
    113f:	83 c4 10             	add    $0x10,%esp
    1142:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1145:	c9                   	leave  
    1146:	c3                   	ret    
    1147:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    114e:	66 90                	xchg   %ax,%ax

00001150 <__do_global_dtors_aux>:
    1150:	f3 0f 1e fb          	endbr32 
    1154:	55                   	push   %ebp
    1155:	89 e5                	mov    %esp,%ebp
    1157:	53                   	push   %ebx
    1158:	e8 53 ff ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    115d:	81 c3 a3 2e 00 00    	add    $0x2ea3,%ebx
    1163:	83 ec 04             	sub    $0x4,%esp
    1166:	80 bb 89 00 00 00 00 	cmpb   $0x0,0x89(%ebx)
    116d:	75 27                	jne    1196 <__do_global_dtors_aux+0x46>
    116f:	8b 83 f4 ff ff ff    	mov    -0xc(%ebx),%eax
    1175:	85 c0                	test   %eax,%eax
    1177:	74 11                	je     118a <__do_global_dtors_aux+0x3a>
    1179:	83 ec 0c             	sub    $0xc,%esp
    117c:	ff b3 40 00 00 00    	pushl  0x40(%ebx)
    1182:	e8 19 ff ff ff       	call   10a0 <__cxa_finalize@plt>
    1187:	83 c4 10             	add    $0x10,%esp
    118a:	e8 31 ff ff ff       	call   10c0 <deregister_tm_clones>
    118f:	c6 83 89 00 00 00 01 	movb   $0x1,0x89(%ebx)
    1196:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1199:	c9                   	leave  
    119a:	c3                   	ret    
    119b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    119f:	90                   	nop

000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fb          	endbr32 
    11a4:	e9 57 ff ff ff       	jmp    1100 <register_tm_clones>

000011a9 <__x86.get_pc_thunk.dx>:
    11a9:	8b 14 24             	mov    (%esp),%edx
    11ac:	c3                   	ret    

000011ad <hashcheck>:
    11ad:	55                   	push   %ebp
    11ae:	89 e5                	mov    %esp,%ebp
    11b0:	53                   	push   %ebx
    11b1:	81 ec 14 04 00 00    	sub    $0x414,%esp
    11b7:	e8 f4 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    11bc:	81 c3 44 2e 00 00    	add    $0x2e44,%ebx
    11c2:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    11c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
    11cb:	31 c0                	xor    %eax,%eax
    11cd:	83 ec 04             	sub    $0x4,%esp
    11d0:	8b 83 f0 ff ff ff    	mov    -0x10(%ebx),%eax
    11d6:	50                   	push   %eax
    11d7:	8d 83 14 e0 ff ff    	lea    -0x1fec(%ebx),%eax
    11dd:	50                   	push   %eax
    11de:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
    11e4:	50                   	push   %eax
    11e5:	e8 a6 fe ff ff       	call   1090 <sprintf@plt>
    11ea:	83 c4 10             	add    $0x10,%esp
    11ed:	83 ec 0c             	sub    $0xc,%esp
    11f0:	8d 85 f4 fb ff ff    	lea    -0x40c(%ebp),%eax
    11f6:	50                   	push   %eax
    11f7:	e8 74 fe ff ff       	call   1070 <system@plt>
    11fc:	83 c4 10             	add    $0x10,%esp
    11ff:	89 85 f0 fb ff ff    	mov    %eax,-0x410(%ebp)
    1205:	83 bd f0 fb ff ff 00 	cmpl   $0x0,-0x410(%ebp)
    120c:	74 40                	je     124e <hashcheck+0xa1>
    120e:	83 ec 0c             	sub    $0xc,%esp
    1211:	8d 83 3f e0 ff ff    	lea    -0x1fc1(%ebx),%eax
    1217:	50                   	push   %eax
    1218:	e8 23 fe ff ff       	call   1040 <printf@plt>
    121d:	83 c4 10             	add    $0x10,%esp
    1220:	83 ec 0c             	sub    $0xc,%esp
    1223:	8d 83 5c e0 ff ff    	lea    -0x1fa4(%ebx),%eax
    1229:	50                   	push   %eax
    122a:	e8 31 fe ff ff       	call   1060 <puts@plt>
    122f:	83 c4 10             	add    $0x10,%esp
    1232:	83 ec 0c             	sub    $0xc,%esp
    1235:	8d 83 78 e0 ff ff    	lea    -0x1f88(%ebx),%eax
    123b:	50                   	push   %eax
    123c:	e8 1f fe ff ff       	call   1060 <puts@plt>
    1241:	83 c4 10             	add    $0x10,%esp
    1244:	83 ec 0c             	sub    $0xc,%esp
    1247:	6a 01                	push   $0x1
    1249:	e8 32 fe ff ff       	call   1080 <exit@plt>
    124e:	90                   	nop
    124f:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1252:	65 2b 05 14 00 00 00 	sub    %gs:0x14,%eax
    1259:	74 05                	je     1260 <hashcheck+0xb3>
    125b:	e8 10 00 00 00       	call   1270 <__stack_chk_fail_local>
    1260:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1263:	c9                   	leave  
    1264:	c3                   	ret    
    1265:	66 90                	xchg   %ax,%ax
    1267:	66 90                	xchg   %ax,%ax
    1269:	66 90                	xchg   %ax,%ax
    126b:	66 90                	xchg   %ax,%ax
    126d:	66 90                	xchg   %ax,%ax
    126f:	90                   	nop

00001270 <__stack_chk_fail_local>:
    1270:	f3 0f 1e fb          	endbr32 
    1274:	53                   	push   %ebx
    1275:	e8 36 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    127a:	81 c3 86 2d 00 00    	add    $0x2d86,%ebx
    1280:	83 ec 08             	sub    $0x8,%esp
    1283:	e8 c8 fd ff ff       	call   1050 <__stack_chk_fail@plt>

Disassembly of section .fini:

00001288 <_fini>:
    1288:	f3 0f 1e fb          	endbr32 
    128c:	53                   	push   %ebx
    128d:	83 ec 08             	sub    $0x8,%esp
    1290:	e8 1b fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    1295:	81 c3 6b 2d 00 00    	add    $0x2d6b,%ebx
    129b:	83 c4 08             	add    $0x8,%esp
    129e:	5b                   	pop    %ebx
    129f:	c3                   	ret    
